设备列表设备项是可折叠的树形结构；
预警图片都使用public文件夹下的bus.jpg，中央视频区域使用video.webp占位且大小要合理，可以适当调整界面上元素位置；

<div>🟢 内存 🟡 CPU</div> 的位置放在‘内存/CPU’后面；
‘设备列表’、‘内存/CPU’、‘统存’三个模块分开来；
将‘统存’模块的进度条改为‘带宽使用’模块的进度条，稍微调整样式，将‘统存’改为‘存储’；
删除‘带宽使用’模块；
‘设备状态’放到‘预警调试’上面；
对于‘设备列表’和‘预警调试’，如果内容超出，给两个模块单独添加滚动条；
‘实时调阅’模块的视频部分占满中间区域；

🟢 内存 🟡 CPU 的位置放在‘内存/CPU’后面；
‘设备状态’的最外层框去掉，和界面左侧面板统一样式，圆圈下的小字横着排列，在原的里面添加环形进度条，进度为底部两个数字的比例；
优化‘列表设备’的列表样式，固定高度，使‘设备列表’、‘内存/CPU’、‘存储’三个模块都完全显示在界面上；
优化‘内存/CPU’、‘存储’图表显示，‘内存/CPU’使用折线图，折线下方填充适当透明度的颜色，内存为绿色，CPU 为黄色，纵轴百分比，横轴时间在外侧，‘存储’样式不变，纵轴删除，横轴百分比从头开始在外侧，两个图标背景颜色为浅蓝色；

删除🟢 内存 🟡 CPU ；

收到，您的需求如下：
存储进度条
进度条要占满整个存储盒子宽度。
样式为类似图片1的动态斜线（斜纹）填充效果。
播放器分屏功能
在“实时调阅”标题栏同一行，添加分屏选择（单屏、四分屏、九分屏），样式参考图片2。
分屏切换时，播放器区域自动切换布局。
我会分两步进行：
1. 存储进度条斜纹填充
使用 ECharts 的 bar 进度条，配合 itemStyle 的 color 设置为斜线渐变（可用 image 纹理）。
让进度条宽度自适应盒子。
2. 播放器分屏功能
在“实时调阅”标题栏右侧添加分屏选择按钮（单屏、四分屏、九分屏），样式为色块+图标。
Vue data 增加 screenMode，切换时动态渲染播放器布局。
单屏：1个播放器，四分屏：2x2，九分屏：3x3。


删除代码中关于9分屏的代码；
删除静音按钮；
给所有屏幕添加一个屏幕id,当鼠标选中哪个屏幕就控制台打印哪个id,id格式为0-3；
修改全屏按钮逻辑，点击全屏时将整个视频区域（包括所有在内的分屏）放大；

播放、暂停、注销、重播都只针对被选中的屏幕操作

给被选中的屏幕添加被选中效果，只需要给边框添加红色颜色即可

底部按钮顺序改为播放、暂停、注销、全屏，注销改为重置，且4个按钮一直显示，播放时播放也不需要改为重播，但是当前屏幕有视频播放时，点击播放逻辑为重播

添加响应式布局

# 原始数据
data = [...]
根据deviceList.py提供的后端代码，在gmini.html中使用获得的数据动态生成设备列表，根据groupid分组，组名为groupname，给列表里的设备绑定deviceid，设备名为devicename；
online为是否在线，start为是否启动，根据这些数字动态改变设备状态的值；
列表的设备状态也根据是否在线和启动在后面的圆点上区分，离线为红，待机为黄，启动为绿；

删除暂停按钮，将播放、清空按钮移动到分屏图标左边，将播放改为重连，重连逻辑为重播，分别使用replay.svg和none.svg







部分接口已有；
前端三个页面如图（样式大概参考表格），添加摄像头，摄像头管理，布控管理；
添加摄像头的deviceid由系统自动生成，不可以重复，格式为'cam'+7位随机数字；
摄像头管理表格里有deviceid，名称，是否转发，时间，操作(编辑、删除、添加布控)等;
布控管理参考表格；
逻辑为：
1、用户进入添加摄像头页面，填写信息，点击提交，调用接口成功后添加到stream数据库；
2、进入摄像头管理页面，点击转发，调用接口拉流，拉流成功后更新stream数据库部分字段信息；
3、点击编辑回到添加摄像头界面回显数据，点击删除调用接口将该数据从stream数据库删除；
4、点击添加布控，页面显示一个大弹窗，弹窗信息为controlid、布控名称、算法标签（检测、分割、定向包围、关键点）（可被选择）和确认按钮，controlid由系统自动生成，不可以重复，格式为将deviceid的cam替换为con，布控名称用户填写，算法标签默认选中检测，点击确认，调用接口，将相关信息添加到control数据库；
5、计入布控管理页面，表格显示相关信息，操作位执行布控按钮，点击后调用接口执行yolo任务，点击停止调用停止按钮，点击删除调用接口从control数据库删除，点击编辑同样弹出弹窗回显，修改后更新信息刷新页面；
6、保证数据的稳定性，提高容错；
7、一个摄像头可以有多个布控，需要合理设计数据库的键；
8、添加摄像头后即为离线状态，转发后为在线、添加布控后为待机，执行布控后为启动，反之亦然

添加摄像头参数如下(仅供参考)：
"decice_id": "camxxxxxxx",//必填，摄像头编号（不能与已有摄像头编号重复）
"device_name": "cameratest",//必填，名称
"pull_stream_type": 1, //必填，数值类型，1:RTSP,2:RTMP,3:FVL,4:HLS,21:GB28181
"pull_stream_url": "rtsp://xxx", // 必填，直播流地址
"device_remark":"", // 非必填，备注
"is_audio":0 // 必填，数值类型，0:静音 1:原始音频
添加布控参数如下（仅供参考）：
'control_id': 'conxxxxxxx', //布控编号
'device_id': 'camxxxxxxx',//视频流编号
'control_name': 'controltest', //布控名称
'control_tag': '1,2,3...', //检测标签，1:检测(detect),2:分割(segment),3:定向包围(obb),4:关键点(pose)
"control_remark":"", // 非必填，备注

给出完整的前端代码和后端代码

你是一个全栈工程师
后端使用python，前端使用Vue3、TypeScript、Vite、Element-Plus、Scss
已经有了一个前端的后台管理系统模板，文档在https://www.lingchen.kim/art-design-pro/docs/zh/guide/introduce.html，基于其中的一些组件继续开发
你要设计一个智慧监控系统，




将gmini.html集成到原art-design-pro项目中，登录后跳转到gmini.html，点击转发回到工作台，在仪表盘菜单下添加一个实时大屏路由，点击实时大屏回到gimini.html